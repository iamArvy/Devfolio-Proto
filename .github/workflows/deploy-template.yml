name: Reusable Deploy Workflow

on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
    secrets:
      AWS_ROLE:
        required: true
      REPOSITORY:
        required: true

env:
  AWS_REGION: MY_AWS_REGION

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy ${{ inputs.APP_NAME }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm install

      - name: Install Nest
        run: npm install -g @nestjs/cli

      - name: Build Nest App
        run: npm run build ${{ inputs.APP_NAME }}

      - name: Create .env File
        run: |
          [ -f .env ] || cp .env.example .env

      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: eu-north-1
          mask-aws-account-id: 'true'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ inputs.REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        id: build-image
        run: |
          docker build -t $REGISTRY/$REPOSITORY:latest --build-arg SERVICE=${{ inputs.APP_NAME }} .
          docker push $REGISTRY/$REPOSITORY:latest
          echo "image=$REGISTRY/$REPOSITORY:latest" >> $GITHUB_OUTPUT
