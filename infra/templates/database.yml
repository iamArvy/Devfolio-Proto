AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  Subnet1:
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Type: AWS::EC2::Subnet::Id
  DBInstanceIdentifier:
    Type: String
    Default: "devfolio-db"
  DBName:
    Type: String
    Default: "portfolio"
  DBUser:
    Type: String
    Default: "portfolio"
  DBPassword:
    Type: String
    NoEcho: true
  DBEngine:
    Type: String
    Default: "postgres"
  DBVersion:
    Type: String
    Default: "15.3"
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  EnableIAMAuth:
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"
  RouteTable:
    Type: AWS::EC2::RouteTable::Id
    Default: "false"

Resources:
  ParameterStoreUsername:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /rds/db/username
      Type: String
      Value: !Ref DBUser
      Description: RDS database username

  ParameterStorePassword:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /rds/db/password
      Type: SecureString
      Value: !Ref DBPassword
      Description: RDS database password

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet1Cidr
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-RDSSubnet1

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet2Cidr
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-RDSSubnet2

  DB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      DBName: !Ref DBName
      Engine: !Ref DBEngine
      EngineVersion: !Ref DBVersion
      DBInstanceClass: "db.t3.micro"
      AllocatedStorage: 20
      StorageType: "gp2"
      MultiAZ: false
      PubliclyAccessible: false
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      EnableIAMDatabaseAuthentication: !Ref EnableIAMAuth
      VPCSecurityGroups:
        - !GetAtt SecurityGroup.GroupId
      DBSubnetGroupName: !Ref RDSSubnetGroup
      BackupRetentionPeriod: 7

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for RDS PostgreSQL"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref ECSSecurityGroup

  SubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "Subnet group for RDS"
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

  PrivateRouteTableAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  PrivateRouteTableAssociationD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2
Outputs:
  RDSPostgresEndpoint:
    Description: "PostgreSQL database endpoint"
    Value: !GetAtt DB.Endpoint.Address
